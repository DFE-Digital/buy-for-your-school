name: Create Review Apps for QA

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled

env:
  GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
  GHCR_REPO: 'ghcr.io/dfe-digital/buy-for-your-school'
  CF_USER: ${{ secrets.CF_USER }}
  CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  turnstyle:
    if: contains(github.event.pull_request.labels.*.name, 'in-qa-env')

    runs-on: ubuntu-latest
    steps:
      - uses: softprops/turnstyle@v1
        name: Check workflow concurrency
        with:
          poll-interval-seconds: 20
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: turnstyle
    runs-on: ubuntu-latest
    outputs:
      tf_var_docker_image: ${{ steps.tf_var_docker_image.outputs.value }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set Docker tag environment variable
        run: echo "DOCKER_TAG=${GITHUB_RUN_ID}-${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Set Docker Image environment variable
        run: echo "DOCKER_IMAGE=$GHCR_REPO:$DOCKER_TAG" >> $GITHUB_ENV
      - name: Set TFVAR Docker Image environment variable
        run: echo "TF_VAR_docker_image=$DOCKER_IMAGE" >> $GITHUB_ENV
      - name: Set TFVAR Docker Image output
        id: tf_var_docker_image
        run: echo "::set-output name=value::$TF_VAR_docker_image"
      - name: Build
        run: script/docker-push-ghcr

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: qa
    env:
      GITHUB_SECRETS_JSON: ${{ toJson(secrets) }}
      TF_VAR_docker_image: ${{needs.build.outputs.tf_var_docker_image}}
      TF_VAR_environment: "qa-${{ github.event.number }}"
      TF_VAR_cloudfoundry_space: "sct-preview"
      TF_VAR_s3_bucket_name: "s3-bucket-qa-${{ github.event.number }}"
      CF_APP_NAME: "buy-for-your-school-qa-${{ github.event.number }}"
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Terraform pin version
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.14.7

      - name: Get Static Route
        run: |
          script/install-cf
          script/qa/cf-login
          STATIC_ROUTE=$(${GITHUB_WORKSPACE}/script/qa/get-free-dsi-redirect-route $CF_APP_NAME)
          echo "STATIC_ROUTE=${STATIC_ROUTE}" >> $GITHUB_ENV
          echo "ENV_APPLICATION_URL=https://${STATIC_ROUTE}.london.cloudapps.digital" >> $GITHUB_ENV

      - name: Deploy QA app
        run: script/deploy-terraform

      - name: Map static route
        run: |
          script/install-cf
          script/qa/cf-login
          script/qa/map-static-route

      - name: Comment QA URL to PR
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            QA application accessible at: ${{ env.ENV_APPLICATION_URL }}.london.cloudapps.digital.
            Note: Full organisation seeding may take up to 5 minutes.
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run seeding
        if: ${{ github.event.action != 'synchronize' }}
        run: |
          script/install-cf
          script/qa/cf-login
          script/qa/seed
