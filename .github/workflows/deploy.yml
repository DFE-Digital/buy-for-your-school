name: deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - research

env:
  GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
  GHCR_REPO: 'ghcr.io/dfe-digital/buy-for-your-school'
  CF_USER: ${{ secrets.CF_USER }}
  CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tf_var_docker_image: ${{ steps.tf_var_docker_image.outputs.value }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set Docker tag environment variable
        run: echo "DOCKER_TAG=${GITHUB_RUN_ID}-${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Set Docker Image environment variable
        run: echo "DOCKER_IMAGE=$GHCR_REPO:$DOCKER_TAG" >> $GITHUB_ENV
      - name: Set TFVAR Docker Image environment variable
        run: echo "TF_VAR_docker_image=$DOCKER_IMAGE" >> $GITHUB_ENV
      - name: Set TFVAR Docker Image output
        id: tf_var_docker_image
        run: echo "::set-output name=value::$TF_VAR_docker_image"
      - name: Build
        run: script/docker-push-ghcr
      - name: Notify
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          fields: workflow,job,commit,repo,ref,author,took
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy_staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    if: success() && github.ref == 'refs/heads/develop'
    env:
      TF_VAR_docker_image: ${{needs.build.outputs.tf_var_docker_image}}
      GITHUB_SECRETS_JSON: ${{ toJson(secrets) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy terraform to staging
        env:
          TF_VAR_environment: 'staging'
        run: script/deploy-terraform

  deploy_research:
    needs: build
    runs-on: ubuntu-latest
    environment: research
    if: success() && github.ref == 'refs/heads/research'
    env:
      TF_VAR_docker_image: ${{needs.build.outputs.tf_var_docker_image}}
      GITHUB_SECRETS_JSON: ${{ toJson(secrets) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy terraform to research
        env:
          TF_VAR_environment: 'research'
        run: script/deploy-terraform
      # - name: Notify
      #   uses: 8398a7/action-slack@v3
      #   if: failure()
      #   with:
      #     fields: workflow,job,commit,repo,ref,author,took
      #     status: ${{ job.status }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy_preview:
    needs: build
    runs-on: ubuntu-latest
    environment: preview
    if: success() && github.ref == 'refs/heads/main'
    env:
      TF_VAR_docker_image: ${{needs.build.outputs.tf_var_docker_image}}
      GITHUB_SECRETS_JSON: ${{ toJson(secrets) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy terraform to preview
        env:
          TF_VAR_environment: 'preview'
        run: script/deploy-terraform
      # - name: Notify
      #   uses: 8398a7/action-slack@v3
      #   if: failure()
      #   with:
      #     fields: workflow,job,commit,repo,ref,author,took
      #     status: ${{ job.status }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy_production:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    if: success() && github.ref == 'refs/heads/main'
    env:
      TF_VAR_docker_image: ${{needs.build.outputs.tf_var_docker_image}}
      GITHUB_SECRETS_JSON: ${{ toJson(secrets) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy terraform to prod
        env:
          TF_VAR_environment: 'prod'
        run: script/deploy-terraform
      # - name: Notify
      #   uses: 8398a7/action-slack@v3
      #   if: failure()
      #   with:
      #     fields: workflow,job,commit,repo,ref,author,took
      #     status: ${{ job.status }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
