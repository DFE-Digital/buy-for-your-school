name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop
env:
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  GIT_BRANCH: ${{ github.head_ref }}
  GIT_COMMIT_SHA: ${{ github.sha }}

jobs:
  plan_s3_preview:
    needs: build
    runs-on: ubuntu-latest
    environment: preview
    if: github.ref == 'refs/heads/create_s3_storage_area'
    env:
      TF_VAR_docker_image: ${{needs.build.outputs.tf_var_docker_image}}
      GITHUB_SECRETS_JSON: ${{ toJson(secrets) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Plan terraform
        env:
          TF_VAR_environment: 'preview'
        run: script/plan-terraform

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - id: cache-docker
        uses: actions/cache@v2
        with:
          path: /tmp/docker-save
          key: docker-save-${{ hashFiles('Dockerfile', 'Gemfile.lock',
            'package-lock.json') }}
      - name: Load cached Docker image
        run: docker load -i /tmp/docker-save/snapshot.tar || true
        if: steps.cache-docker.outputs.cache-hit == 'true'
      - name: Build
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml --project-name ghbs build
      - name: Test
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml run --rm app
      - name: Prepare Docker cache
        run: mkdir -p /tmp/docker-save && docker save ghbs_app:latest -o
          /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save
        if: always() && steps.cache-docker.outputs.cache-hit != 'true'
