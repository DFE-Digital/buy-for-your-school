<% scope ||= 'filter_cases' %>
<% filter_url ||= request.path %>
<% tab ||= 'all-cases' %>
<% hide_towers = defined?(hide_towers) ? hide_towers : false %>

<%= form_with id: scope, model: form, scope: scope, url: filter_url, method: :get, class: "filter-case-form" do |f| %>
  <h2 class="govuk-heading-m">
    <%= I18n.t("support.case.filter.filter_results") %>
  </h2>

  <div class="govuk-grid-row">
    <% if tab == "all-cases" || tab.ends_with?("tower") || tab == "my-cases" %>
      <div class="govuk-grid-column-one-quarter">
        <%= f.govuk_select :state,
                              options_for_select(f.object.case_states.map { |s| [s.title, s.id] },
                                                  f.object.state),
                              options: { include_blank: I18n.t("support.case.filter.labels.all") },
                              label: { text: I18n.t("support.case.filter.labels.state") } %>
      </div>
    <% end %>

    <div class="govuk-grid-column-one-quarter">
      <%= f.govuk_select :category,
                            options_for_select(f.object.categories.map { |a| [a.title, a.id] },
                                                f.object.category),
                            options: { include_blank: I18n.t("support.case.filter.labels.all") },
                            label: { text: I18n.t("support.case.filter.labels.sub_category") } %>
    </div>

    <% unless hide_towers %>
    <div class="govuk-grid-column-one-quarter">
      <%= f.govuk_select :tower,
                            options_for_select(f.object.towers.map { |a| [a.title, a.id] },
                                                f.object.tower),
                            options: { include_blank: I18n.t("support.case.filter.labels.all") },
                            label: { text: I18n.t("support.case.filter.labels.tower") } %>
    </div>
    <% end %>

    <% if tab == "all-cases" || tab.ends_with?("tower") %>
      <div class="govuk-grid-column-one-quarter">
        <%= f.govuk_select :agent,
                              options_for_select(f.object.agents.map { |a| [a.full_name, a.id] },
                                                  f.object.agent),
                              options: { include_blank: I18n.t("support.case.filter.labels.all") },
                              label: { text: I18n.t("support.case.filter.labels.assignee") } %>
      </div>
    <% end %>

    <div class="govuk-grid-column-one-quarter">
      <%= f.govuk_select :stage,
                            options_for_select(f.object.stages.map { |a| [a.title, a.id] },
                                                f.object.stage),
                            options: { include_blank: I18n.t("support.case.filter.labels.all") },
                            label: { text: I18n.t("support.case.filter.labels.stage") } %>
    </div>

    <div class="govuk-grid-column-one-quarter">
      <%= f.govuk_select :level,
                            options_for_select(f.object.levels.map { |a| [a.title, a.id] },
                                                f.object.level),
                            options: { include_blank: I18n.t("support.case.filter.labels.all") },
                            label: { text: I18n.t("support.case.filter.labels.level") } %>
    </div>
  </div>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-three-quarters">
      <div class="govuk-button-group">
        <%= f.hidden_field :search_term, value: f.object.try(:search_term) %>
        <%= f.hidden_field :user_submitted, value: true %>
        <%= f.submit I18n.t("support.case.filter.buttons.apply"), class: "govuk-button govuk-button--secondary", role: "button" %>
        <%= link_to I18n.t("support.case.filter.buttons.clear"), clear_url, class: "govuk-button govuk-button--secondary", role: "button" %>
      </div>
    </div>
  </div>
<% end %>
